/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Schemes = string[];
export type Credentials = string | null;
export type Streaming = boolean;
export type PushNotifications = boolean;
export type Statetransitionhistory = boolean;
export type Name = string;
export type Description = string | null;
export type Url = string;
export type Organization = string;
export type Url1 = string | null;
export type Version = string;
export type Documentationurl = string | null;
export type Defaultinputmodes = string[];
export type Defaultoutputmodes = string[];
export type Id = string;
export type Name1 = string;
export type Description1 = string | null;
export type Tags = string[] | null;
export type Examples = string[] | null;
export type Inputmodes = string[] | null;
export type Outputmodes = string[] | null;
export type Skills = AgentSkill[];
export type Name2 = string | null;
export type Description2 = string | null;
export type Part = TextPart | FilePart | DataPart;
/**
 * Type of the part
 */
export type Type = "text";
export type Text = string;
export type Metadata = {
    [k: string]: unknown;
} | null;
/**
 * Type of the part
 */
export type Type1 = "file";
export type Name3 = string | null;
export type Mimetype = string | null;
export type Bytes = string | null;
export type Uri = string | null;
export type Metadata1 = {
    [k: string]: unknown;
} | null;
/**
 * Type of the part
 */
export type Type2 = "data";
export type Metadata2 = {
    [k: string]: unknown;
} | null;
export type Parts = Part[];
export type Index = number;
export type Append = boolean | null;
export type LastChunk = boolean | null;
export type Metadata3 = {
    [k: string]: unknown;
} | null;
export type Schemes1 = string[];
export type Credentials1 = string | null;
/**
 * Error code
 */
export type Code = -32003;
/**
 * A short description of the error
 */
export type Message = "Push Notification is not supported";
export type Data1 = null;
export type Jsonrpc = "2.0";
export type Id1 = number | string | null;
export type Method = "tasks/cancel";
export type Id2 = string;
export type Metadata4 = {
    [k: string]: unknown;
} | null;
export type Jsonrpc1 = "2.0";
export type Id3 = number | string | null;
export type Id4 = string;
export type Sessionid = string | null;
/**
 * An enumeration.
 */
export type TaskState = "submitted" | "working" | "input-required" | "completed" | "canceled" | "failed" | "unknown";
export type Role = "user" | "agent";
export type Parts1 = Part[];
export type Metadata5 = {
    [k: string]: unknown;
} | null;
export type Timestamp = string;
export type Artifacts = Artifact[] | null;
export type Metadata6 = {
    [k: string]: unknown;
} | null;
export type Code1 = number;
export type Message2 = string;
export type Jsonrpc2 = "2.0";
export type Id5 = number | string | null;
export type Method1 = "tasks/pushNotification/get";
export type Jsonrpc3 = "2.0";
export type Id6 = number | string | null;
export type Id7 = string;
export type Url2 = string;
export type Token = string | null;
export type Jsonrpc4 = "2.0";
export type Id8 = number | string | null;
export type Method2 = "tasks/get";
export type Id9 = string;
export type HistoryLength = number | null;
export type Metadata7 = {
    [k: string]: unknown;
} | null;
export type Jsonrpc5 = "2.0";
export type Id10 = number | string | null;
/**
 * Error code
 */
export type Code2 = -32603;
/**
 * A short description of the error
 */
export type Message3 = "Internal error";
/**
 * Error code
 */
export type Code3 = -32602;
/**
 * A short description of the error
 */
export type Message4 = "Invalid parameters";
/**
 * Error code
 */
export type Code4 = -32600;
/**
 * A short description of the error
 */
export type Message5 = "Request payload validation error";
/**
 * Error code
 */
export type Code5 = -32700;
/**
 * A short description of the error
 */
export type Message6 = "Invalid JSON payload";
export type Jsonrpc6 = "2.0";
export type Id11 = number | string | null;
export type Jsonrpc7 = "2.0";
export type Id12 = number | string | null;
export type Method3 = string;
export type Params = {
    [k: string]: unknown;
} | null;
export type Jsonrpc8 = "2.0";
export type Id13 = number | string | null;
/**
 * Error code
 */
export type Code6 = -32601;
/**
 * A short description of the error
 */
export type Message7 = "Method not found";
export type Data7 = null;
export type Jsonrpc9 = "2.0";
export type Id14 = number | string | null;
export type Method4 = "tasks/send";
export type Id15 = string;
export type Sessionid1 = string;
export type HistoryLength1 = number | null;
export type Metadata8 = {
    [k: string]: unknown;
} | null;
export type Jsonrpc10 = "2.0";
export type Id16 = number | string | null;
export type Jsonrpc11 = "2.0";
export type Id17 = number | string | null;
export type Method5 = "tasks/sendSubscribe";
export type Jsonrpc12 = "2.0";
export type Id18 = number | string | null;
export type Id19 = string;
export type Final = boolean;
export type Metadata9 = {
    [k: string]: unknown;
} | null;
export type Id20 = string;
export type Metadata10 = {
    [k: string]: unknown;
} | null;
export type Jsonrpc13 = "2.0";
export type Id21 = number | string | null;
export type Method6 = "tasks/pushNotification/set";
export type Jsonrpc14 = "2.0";
export type Id22 = number | string | null;
/**
 * Error code
 */
export type Code7 = -32002;
/**
 * A short description of the error
 */
export type Message8 = "Task cannot be canceled";
export type Data8 = null;
/**
 * Error code
 */
export type Code8 = -32001;
/**
 * A short description of the error
 */
export type Message9 = "Task not found";
export type Data9 = null;
export type Jsonrpc15 = "2.0";
export type Id23 = number | string | null;
export type Method7 = "tasks/resubscribe";
/**
 * Error code
 */
export type Code9 = -32004;
/**
 * A short description of the error
 */
export type Message10 = "This operation is not supported";
export type Data10 = null;
export type A2ARequest =
    | SendTaskRequest
    | GetTaskRequest
    | CancelTaskRequest
    | SetTaskPushNotificationRequest
    | GetTaskPushNotificationRequest
    | TaskResubscriptionRequest;

/**
 * JSON Schema for A2A Protocol
 */
export interface A2AProtocolSchema {
    AgentAuthentication?: AgentAuthentication;
    AgentCapabilities?: AgentCapabilities;
    AgentCard?: AgentCard;
    AgentProvider?: AgentProvider;
    AgentSkill?: AgentSkill;
    Artifact?: Artifact;
    AuthenticationInfo?: AuthenticationInfo;
    PushNotificationNotSupportedError?: PushNotificationNotSupportedError;
    CancelTaskRequest?: CancelTaskRequest;
    CancelTaskResponse?: CancelTaskResponse;
    DataPart?: DataPart;
    FileContent?: FileContent;
    FilePart?: FilePart;
    GetTaskPushNotificationRequest?: GetTaskPushNotificationRequest;
    GetTaskPushNotificationResponse?: GetTaskPushNotificationResponse;
    GetTaskRequest?: GetTaskRequest;
    GetTaskResponse?: GetTaskResponse;
    InternalError?: InternalError;
    InvalidParamsError?: InvalidParamsError;
    InvalidRequestError?: InvalidRequestError;
    JSONParseError?: JSONParseError;
    JSONRPCError?: JSONRPCError;
    JSONRPCMessage?: JSONRPCMessage;
    JSONRPCRequest?: JSONRPCRequest;
    JSONRPCResponse?: JSONRPCResponse;
    Message?: Message1;
    MethodNotFoundError?: MethodNotFoundError;
    PushNotificationConfig?: PushNotificationConfig;
    Part?: Part;
    SendTaskRequest?: SendTaskRequest;
    SendTaskResponse?: SendTaskResponse;
    SendTaskStreamingRequest?: SendTaskStreamingRequest;
    SendTaskStreamingResponse?: SendTaskStreamingResponse;
    SetTaskPushNotificationRequest?: SetTaskPushNotificationRequest;
    SetTaskPushNotificationResponse?: SetTaskPushNotificationResponse;
    Task?: Task;
    TaskPushNotificationConfig?: TaskPushNotificationConfig;
    TaskNotCancelableError?: TaskNotCancelableError;
    TaskNotFoundError?: TaskNotFoundError;
    TaskIdParams?: TaskQueryParams;
    TaskQueryParams?: TaskQueryParams1;
    TaskSendParams?: TaskSendParams;
    TaskState?: TaskState;
    TaskStatus?: TaskStatus;
    TaskResubscriptionRequest?: TaskResubscriptionRequest;
    TaskStatusUpdateEvent?: TaskStatusUpdateEvent;
    TaskArtifactUpdateEvent?: TaskArtifactUpdateEvent;
    TextPart?: TextPart;
    UnsupportedOperationError?: UnsupportedOperationError;
    A2ARequest?: A2ARequest;
    [k: string]: unknown;
}
export interface AgentAuthentication {
    schemes: Schemes;
    credentials?: Credentials;
    [k: string]: unknown;
}
export interface AgentCapabilities {
    streaming?: Streaming;
    pushNotifications?: PushNotifications;
    stateTransitionHistory?: Statetransitionhistory;
    [k: string]: unknown;
}
export interface AgentCard {
    name: Name;
    description?: Description;
    url: Url;
    provider?: AgentProvider | null;
    version: Version;
    documentationUrl?: Documentationurl;
    capabilities: AgentCapabilities;
    authentication?: AgentAuthentication | null;
    defaultInputModes?: Defaultinputmodes;
    defaultOutputModes?: Defaultoutputmodes;
    skills: Skills;
    [k: string]: unknown;
}
export interface AgentProvider {
    organization: Organization;
    url?: Url1;
    [k: string]: unknown;
}
export interface AgentSkill {
    id: Id;
    name: Name1;
    description?: Description1;
    tags?: Tags;
    examples?: Examples;
    inputModes?: Inputmodes;
    outputModes?: Outputmodes;
    [k: string]: unknown;
}
export interface Artifact {
    name?: Name2;
    description?: Description2;
    parts: Parts;
    index?: Index;
    append?: Append;
    lastChunk?: LastChunk;
    metadata?: Metadata3;
    [k: string]: unknown;
}
export interface TextPart {
    type?: Type;
    text: Text;
    metadata?: Metadata;
    [k: string]: unknown;
}
export interface FilePart {
    type?: Type1;
    file: FileContent;
    metadata?: Metadata1;
    [k: string]: unknown;
}
/**
 * Represents the content of a file, either as base64 encoded bytes or a URI.
 *
 * Ensures that either 'bytes' or 'uri' is provided, but not both.
 */
export interface FileContent {
    name?: Name3;
    mimeType?: Mimetype;
    bytes?: Bytes;
    uri?: Uri;
    [k: string]: unknown;
}
export interface DataPart {
    type?: Type2;
    data: Data;
    metadata?: Metadata2;
    [k: string]: unknown;
}
export interface Data {
    [k: string]: unknown;
}
export interface AuthenticationInfo {
    schemes: Schemes1;
    credentials?: Credentials1;
    [k: string]: unknown;
}
export interface PushNotificationNotSupportedError {
    code: Code;
    message: Message;
    data: Data1;
    [k: string]: unknown;
}
export interface CancelTaskRequest {
    jsonrpc?: Jsonrpc;
    id?: Id1;
    method: Method;
    params: TaskQueryParams;
    [k: string]: unknown;
}
export interface TaskQueryParams {
    id: Id2;
    metadata?: Metadata4;
    [k: string]: unknown;
}
export interface CancelTaskResponse {
    jsonrpc?: Jsonrpc1;
    id?: Id3;
    result?: Task | null;
    error?: JSONRPCError | null;
    [k: string]: unknown;
}
export interface Task {
    id: Id4;
    sessionId?: Sessionid;
    status: TaskStatus;
    artifacts?: Artifacts;
    metadata?: Metadata6;
    [k: string]: unknown;
}
export interface TaskStatus {
    state: TaskState;
    message?: Message1 | null;
    timestamp?: Timestamp;
    [k: string]: unknown;
}
export interface Message1 {
    role: Role;
    parts: Parts1;
    metadata?: Metadata5;
    [k: string]: unknown;
}
export interface JSONRPCError {
    code: Code1;
    message: Message2;
    data?: unknown;
    [k: string]: unknown;
}
export interface GetTaskPushNotificationRequest {
    jsonrpc?: Jsonrpc2;
    id?: Id5;
    method: Method1;
    params: TaskQueryParams;
    [k: string]: unknown;
}
export interface GetTaskPushNotificationResponse {
    jsonrpc?: Jsonrpc3;
    id?: Id6;
    result?: TaskPushNotificationConfig | null;
    error?: JSONRPCError | null;
    [k: string]: unknown;
}
export interface TaskPushNotificationConfig {
    id: Id7;
    pushNotificationConfig: PushNotificationConfig;
    [k: string]: unknown;
}
export interface PushNotificationConfig {
    url: Url2;
    token?: Token;
    authentication?: AuthenticationInfo | null;
    [k: string]: unknown;
}
export interface GetTaskRequest {
    jsonrpc?: Jsonrpc4;
    id?: Id8;
    method: Method2;
    params: TaskQueryParams1;
    [k: string]: unknown;
}
export interface TaskQueryParams1 {
    id: Id9;
    historyLength?: HistoryLength;
    metadata?: Metadata7;
    [k: string]: unknown;
}
export interface GetTaskResponse {
    jsonrpc?: Jsonrpc5;
    id?: Id10;
    result?: Task | null;
    error?: JSONRPCError | null;
    [k: string]: unknown;
}
export interface InternalError {
    code: Code2;
    message: Message3;
    data?: unknown;
    [k: string]: unknown;
}
export interface InvalidParamsError {
    code: Code3;
    message: Message4;
    data?: unknown;
    [k: string]: unknown;
}
export interface InvalidRequestError {
    code: Code4;
    message: Message5;
    data?: unknown;
    [k: string]: unknown;
}
export interface JSONParseError {
    code: Code5;
    message: Message6;
    data?: unknown;
    [k: string]: unknown;
}
export interface JSONRPCMessage {
    jsonrpc?: Jsonrpc6;
    id?: Id11;
    [k: string]: unknown;
}
export interface JSONRPCRequest {
    jsonrpc?: Jsonrpc7;
    id?: Id12;
    method: Method3;
    params?: Params;
    [k: string]: unknown;
}
export interface JSONRPCResponse {
    jsonrpc?: Jsonrpc8;
    id?: Id13;
    result?: unknown;
    error?: JSONRPCError | null;
    [k: string]: unknown;
}
export interface MethodNotFoundError {
    code: Code6;
    message: Message7;
    data: Data7;
    [k: string]: unknown;
}
export interface SendTaskRequest {
    jsonrpc?: Jsonrpc9;
    id?: Id14;
    method: Method4;
    params: TaskSendParams;
    [k: string]: unknown;
}
export interface TaskSendParams {
    id: Id15;
    sessionId?: Sessionid1;
    message: Message1;
    pushNotification?: PushNotificationConfig | null;
    historyLength?: HistoryLength1;
    metadata?: Metadata8;
    [k: string]: unknown;
}
export interface SendTaskResponse {
    jsonrpc?: Jsonrpc10;
    id?: Id16;
    result?: Task | null;
    error?: JSONRPCError | null;
    [k: string]: unknown;
}
export interface SendTaskStreamingRequest {
    jsonrpc?: Jsonrpc11;
    id?: Id17;
    method: Method5;
    params: TaskSendParams;
    [k: string]: unknown;
}
export interface SendTaskStreamingResponse {
    jsonrpc?: Jsonrpc12;
    id?: Id18;
    result?: TaskStatusUpdateEvent | TaskArtifactUpdateEvent | null;
    error?: JSONRPCError | null;
    [k: string]: unknown;
}
export interface TaskStatusUpdateEvent {
    id: Id19;
    status: TaskStatus;
    final?: Final;
    metadata?: Metadata9;
    [k: string]: unknown;
}
export interface TaskArtifactUpdateEvent {
    id: Id20;
    artifact: Artifact;
    metadata?: Metadata10;
    [k: string]: unknown;
}
export interface SetTaskPushNotificationRequest {
    jsonrpc?: Jsonrpc13;
    id?: Id21;
    method: Method6;
    params: TaskPushNotificationConfig;
    [k: string]: unknown;
}
export interface SetTaskPushNotificationResponse {
    jsonrpc?: Jsonrpc14;
    id?: Id22;
    result?: TaskPushNotificationConfig | null;
    error?: JSONRPCError | null;
    [k: string]: unknown;
}
export interface TaskNotCancelableError {
    code: Code7;
    message: Message8;
    data: Data8;
    [k: string]: unknown;
}
export interface TaskNotFoundError {
    code: Code8;
    message: Message9;
    data: Data9;
    [k: string]: unknown;
}
export interface TaskResubscriptionRequest {
    jsonrpc?: Jsonrpc15;
    id?: Id23;
    method: Method7;
    params: TaskQueryParams1;
    [k: string]: unknown;
}
export interface UnsupportedOperationError {
    code: Code9;
    message: Message10;
    data: Data10;
    [k: string]: unknown;
}
